<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ProxySU.Translations"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!-- Main program interface -->
    <sys:String x:Key="TextBlockNewVersionReminder">The new version has been released!</sys:String>
    <sys:String x:Key="TextBlockNewVersionDown">Downloading...Wait Prompt...</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorDownProxyFail">The download of the latest version failed, please try again later!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorDownProxySuccess">Download the latest version successfully, the file has been saved in the same directory of the current ProxySU.exe</sys:String>
    <sys:String x:Key="ButtonUpgradeProxySU">Update</sys:String>
    <sys:String x:Key="MainWindowsLanguage">界面語言:</sys:String>
    <sys:String x:Key="TabItemHeaderAppDeployment">Deployment</sys:String>
    <sys:String x:Key="TabItemHeaderResourceTools">Resources</sys:String>
    <sys:String x:Key="TabItemHeaderFreeWallURL">Free Wall URL</sys:String>
    <sys:String x:Key="TabItemHeaderCommonError">Common Error</sys:String>
    <sys:String x:Key="TextBlockHostName">Host:</sys:String>
    <sys:String x:Key="TextBoxHostNamePrompt">IP or Domain (Not empty)</sys:String>
    <sys:String x:Key="TextBlockHostPart">Port:</sys:String>
    <sys:String x:Key="TextBlockHostUser">User:</sys:String>
    <sys:String x:Key="TextBlockHostPassword">Password:</sys:String>
    <sys:String x:Key="TextBlockHostCert">Key:</sys:String>
    <sys:String x:Key="TextBoxKeyNotEmptyPrompt">Key file Path (Not Empty)</sys:String>
    <sys:String x:Key="ButtonOpenFileDialog">Open...</sys:String>
    <sys:String x:Key="RadioButtonPasswordLogin">Password Login</sys:String>
    <sys:String x:Key="RadioButtonCertLogin">Key Login</sys:String>
    <sys:String x:Key="RadioButtonNoProxy">No Proxy</sys:String>
    <sys:String x:Key="RadioButtonProxyNoLogin">Not Login</sys:String>
    <sys:String x:Key="RadiobuttonProxyYesLogin">Requires Login</sys:String>
    <sys:String x:Key="TextBlockProxyHost">Proxy Addr:</sys:String>
    <sys:String x:Key="ButtonSaveInstalledLog">Save Installation Log...</sys:String>
    <sys:String x:Key="TextBlockSetUpProcessing">Waiting for installation and deployment</sys:String>
    <sys:String x:Key="TabItemHeaderSysTools">System Tools</sys:String>

    <sys:String x:Key="ButtonTemplateConfigurationXray">Xray template library</sys:String>
    <sys:String x:Key="Button_LoginXray">Xray one-click installation</sys:String>
    <sys:String x:Key="ButtonUpdateXray">Upgrade Xay</sys:String>

    <sys:String x:Key="ButtonV2RayTemplateConfiguration">V2Ray Templates</sys:String>
    <sys:String x:Key="ButtonV2RayOneKeyInstall">V2ray install</sys:String>
    <sys:String x:Key="ButtonUpdateV2ray">Upgrade V2Ray</sys:String>
    <sys:String x:Key="Button_canel">Cancel</sys:String>
    <sys:String x:Key="ButtonTrojanGoTemplate">Trojan-Go Templates</sys:String>
    <sys:String x:Key="ButtonTrojanGoSetUp">Trojan-Go install</sys:String>
    <sys:String x:Key="ButtonUpdateTrojanGo">Upgrade Trojan-Go</sys:String>
    <sys:String x:Key="ButtonTrojanGoCancel">Cancel</sys:String>
    <sys:String x:Key="TextBlockCurrentlySelectedPlan">Currently selected plan:</sys:String>
    <sys:String x:Key="TextBlockCurrentlySelectedPlanNo">No plan selected</sys:String>
    <!-- The following Trojan settings parameter tab interface -->
    <sys:String x:Key="GroupBoxHeaderParameterTrojan">Parameter settings</sys:String>
    <sys:String x:Key="TextBlockTrojanTemplateExplanation">Mode: Trojan+TLS+Caddy</sys:String>
    <sys:String x:Key="TextBlockTrojanServerDomain">Domain:</sys:String>
    <sys:String x:Key="TextBlockTrojanPort">Port: 443</sys:String>
    <sys:String x:Key="TextBoxDomainPrompt">Domain Not Empty</sys:String>
    <sys:String x:Key="TextBlockTrojanHostPassword">Password:</sys:String>
    <sys:String x:Key="ButtonTrojanChangePassword">Change</sys:String>
    <sys:String x:Key="ButtonTrojanSetUp">Trojan install</sys:String>
    <sys:String x:Key="ButtonUpdateTrojan">Upgrade Trojan</sys:String>
    <sys:String x:Key="ButtonTrojanCancel">Cancel</sys:String>
    <!-- The following NaiveProxy settings parameter tab interface -->
    <sys:String x:Key="TextBlockNaiveProxyTemplateExplanation">Mode: NaiveProxy+TLS+Caddy</sys:String>
    <sys:String x:Key="ButtonNaiveProxyChangeUser">Random</sys:String>
    <sys:String x:Key="ButtonNavieSetUp">NaiveProxy install</sys:String>
    <sys:String x:Key="ButtonNaiveCancel">Cancel</sys:String>
    <!-- 以下SSR设置参数标签页界面 -->
    <sys:String x:Key="TextBlockSSRTemplateExplanation">Mode: SSR+TLS+Caddy</sys:String>
    <sys:String x:Key="ButtonSSRSetUp">SSR install</sys:String>

    <!-- 以下MTProto设置参数标签页界面 -->
    <sys:String x:Key="TextBlockMtgTemplateExplanation">Mode: MTProto+TLS</sys:String>
    <sys:String x:Key="ButtonMtgSetUp">MTProto install</sys:String>
    <sys:String x:Key="TextBlockMtgFakeDomainExplanation">Making domain name:</sys:String>
    <sys:String x:Key="TextBlockMtgPortExplanation">Recommended https ports 443, 2053, 2083, 2087, 2096, 8443</sys:String>
    <sys:String x:Key="TextBlockMtgSecretExplanation">The secret key will be randomly generated by the server.</sys:String>
    
    <!-- 以下SS设置参数标签页界面 -->
    <sys:String x:Key="ButtonSetUpSS">SS install</sys:String>
    <sys:String x:Key="ButtonTemplateConfigurationSS">SS plug-in library</sys:String>
    <sys:String x:Key="TabItemHeaderNonePluginSS">Classic mode</sys:String>
    <sys:String x:Key="TextBlockNonePluginPointSS">Tip: This mode, long time, large traffic use, easy to be blocked and interfered, is not recommended!</sys:String>
    <sys:String x:Key="RadioButtonNonePluginSS">SS Classic</sys:String>
    <sys:String x:Key="TextBlockNonePluginExplainSS">SS classic use mode, no domain name is required, data is encrypted with high strength, and the data is recognized as unknown data. At present, the traffic is easy to be identified, and it is easy to be interfered and blocked. Use it with caution! Putting here is just a feeling and tribute!</sys:String>
    <sys:String x:Key="TabItemHeaderObfsPluginSS">Simple-obfs plug-in</sys:String>
    <sys:String x:Key="TextBlockObfsPluginPointSS">Tip: This is a traffic obfuscation scheme used in the early days of SS. The plug-in has not been updated for a long time and is not recommended!</sys:String>
    <sys:String x:Key="RadioButtonObfsPluginHttpWebSS">SS+obfs+http+Web</sys:String>
    <sys:String x:Key="TextBlockObfsPluginHttpWebExplainSS">Does not require a domain name, the data is highly encrypted, the traffic is confused as http (not the real http), and the use of Web site camouflage can enhance the anti-recognition to a certain extent! CDN is not supported.</sys:String>
    <sys:String x:Key="RadioButtonObfsPluginHttpsWebSS">SS+obfs+TLS(https)+Web</sys:String>
    <sys:String x:Key="TextBlockObfsPluginTLShttpsWebExplainSS">requires a domain name, the use of a domain name will greatly enhance the anti-identification, high-strength data encryption, traffic confusion as https (not real https), the use of Web site camouflage, further enhance the anti-identification! CDN is not supported.</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayPluginSS">V2Ray plug-in</sys:String>
    <sys:String x:Key="TextBlockV2rayPluginPointSS">Reminder: ShadowRocket(ios) does not support SS+Quic mode</sys:String>
    <sys:String x:Key="RadioButtonWebSocketTLSWebSS">SS+WebSocket+TLS+Caddy (Web post)</sys:String>
    <sys:String x:Key="RadioButtonWebSocketTLSWebFrontSS">SS+WebSocket+TLS+Caddy (Web front)</sys:String>
    <sys:String x:Key="TextBlockV2RayPluginPointSS">Tip: In the above scheme, there is no difference in the use effect between Web front and Web post. In the Web post scheme, the TLS certificate is applied for by acme.sh. After the certificate expires, acme.sh will automatically renew, but you need to manually restart SS to load the new certificate. The certificate in the web front-end solution is automatically applied for and loaded by Caddy without restarting SS.</sys:String>
    <sys:String x:Key="RadioButtonQuicSS">SS+QUIC</sys:String>
    <sys:String x:Key="TextBlockQuicExplainSS">V2Ray-Plugin uses QUIC protocol for transmission, and TLS encryption is mandatory. Encrypted data transmission, identified as udp traffic, was originally initiated by Google, advantages: reduced delay, multiplexing, connection migration, domain name is required,</sys:String>
    <!--<sys:String x:Key="TabItemHeaderOtherPluginsSS">kcptun/GoQuiet/Cloak plugin</sys:String>-->
    <sys:String x:Key="TabItemHeaderOtherPluginsSS">kcptun Plugin</sys:String>
    <sys:String x:Key="TextBlockGoQuietPluginPointSS">Reminder: Shadowrocket(ios) does not support GoQuiet-plugin. shadowsocks (Android) does not support GoQuiet-plugin and Cloak-plugin plug-ins</sys:String>
    <sys:String x:Key="TextBlockKcptunPluginExplainSS">KCP is a fast and reliable protocol. It can waste 10%-20% of bandwidth than TCP in exchange for a 30%-40% reduction in average latency and a three-fold reduction in maximum latency The transmission effect. Use UDP protocol for transmission, high-strength data encryption, transmission of the same content, kcp generally consumes more traffic than TCP, and will greatly increase the network speed under lines with high packet loss rates, and may be restricted by QOS at individual operators .</sys:String>
    <sys:String x:Key="TextBlockGoQuietPluginExplainSS">The basic principle is to simulate TLS traffic while disguising the server as a normal web server. This confusion is not the first: simple-obfs and ShadowsocksR’s tls1.2_ticket_auth mode proves this. It works. This plug-in improves the existing methods, and its goal is to make large-scale blockade of HTTPS servers (even IP segments) the only effective way to block SS</sys:String>
    <sys:String x:Key="TextBlockCloakPluginExplainSS">Use encryption to confuse proxy traffic into legitimate HTTPS traffic, and disguise the proxy server as a normal Web server to avoid Internet censorship. It can be seen as an upgraded version of GoQuiet above, optimizing the network connection speed, and not confusing https but real https traffic.</sys:String>
    <sys:String x:Key="TextBlockPluginNameExplainSS">Plugin program:</sys:String>
    <sys:String x:Key="TextBlockPluginOptionExplainSS">Plugin options:</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ExplainBuildSS">Use the compilation method, it will take a little longer, please be patient...</sys:String>
    
    <!-- The following system tool tab interface -->
    <sys:String x:Key="ButtonProofreadTime">Proofreading Time</sys:String>
    <sys:String x:Key="ButtonClearOccupiedPorts">Release 80/443</sys:String>
    <sys:String x:Key="ButtonTestAndEnableBBR">Enable BBR</sys:String>
    <sys:String x:Key="ButtonRemoveAllSoft">Uninstall Proxy</sys:String>
    <sys:String x:Key="ButtonEnableRootPassWord">Enable root password login</sys:String>
    <sys:String x:Key="ButtonRootProhibitsPasswordLogin">root prohibits password login</sys:String>
    <sys:String x:Key="ButtonEnableRootCert">Enable root certificate key login</sys:String>
    <sys:String x:Key="MessageBoxShow_RemoveAllSoft">Only the proxy software installed by ProxySU and related configurations are supported. Please make sure that important configurations have been backed up. Uninstalling agents installed using other methods or scripts is not supported. Are you sure you want to uninstall the agent software on the remote host?</sys:String>
    <sys:String x:Key="MessageBoxShow_EnableRootPassword">This function requires that the currently logged-in account has sudo permissions. Is the root account enabled and password set for the remote host?</sys:String>
    <sys:String x:Key="MessageBoxShow_ButtonEnableRootCert">This function requires that the currently logged-in account has root or sudo authority. Is root certificate key login enabled for the remote host?</sys:String>
    <sys:String x:Key="MessageBoxShow_ButtonRootProhibitsPasswordLogin">This function requires that the remote host has enabled other login methods, such as key mode, etc., otherwise the remote host may not be able to connect. Is the root account password login method of the remote host prohibited?</sys:String>
    <sys:String x:Key="DisplayInstallInfo_SetRootProhibitsPasswordLogin">is closing the root account password login method.....</sys:String>
    <sys:String x:Key="MessageBoxShow_RootProhibitsPasswordLoginOK">The remote host root account password login method is closed!</sys:String>
    <sys:String x:Key="MessageBoxShow_ButtonEnableRootCertSuccess">The root account certificate key login of the remote host has been enabled, and the key file rootuser.key is saved in the subsequent opened folder!</sys:String>
    <sys:String x:Key="MessageBoxShow_AlreadyRoot">The current account already has root privileges, no need to set it up!</sys:String>
    <sys:String x:Key="MessageBoxShow_NoSudoToAccount">The current account cannot obtain sudo permission, the setting failed!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_GenerateRandomPassword">Generate a 20-digit random password!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_EnableRootPasswordSavePasswordInfo">Save password information!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_EnableRootCertGenerateCert">Generating a key...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_EnableRootCertDownloadCert">The key is being downloaded...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_EnableRootCertSetCertEnable">The remote host enables key login.......</sys:String>
    <sys:String x:Key="DisplayInstallInfo_EnableRootPasswordSuccess">The remote host Root account password login is enabled, and the password is saved in the folder opened afterwards!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartRemoveProxy">Start uninstall......</sys:String>
    <sys:String x:Key="DisplayInstallInfo_DiscoverProxySoft">Detected installed</sys:String>
    <sys:String x:Key="DisplayInstallInfo_RemoveProxySoftFailed">Uninstallation failed! Please ask the developer!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_RemoveProxySoftSuccess">Uninstall successfully!</sys:String>
    <!-- The following resource tool tab interface -->
    <sys:String x:Key="ButtonWebBrowserHomePage">Home</sys:String>
    <sys:String x:Key="ButtonWebBrowserForward">Forward</sys:String>
    <sys:String x:Key="ButtonWebBrowserBack">Back</sys:String>
    <sys:String x:Key="TextBlockWebExplain">Due to well-known reasons, loading is slow at certain times, please be patient</sys:String>
    <!-- The following Trojan-go template library interface -->
    <sys:String x:Key="GroupBoxHeaderTrojanGoTemplates">Trojan-go template library</sys:String>
    <sys:String x:Key="TextBlockTrojanGoTLSwebPlan">http/2 transmission, Caddy2 camouflage website, anti-recognition, CDN of CloudFlare is not currently supported</sys:String>
    <sys:String x:Key="TextBlockTrojanGoWebSocketTLSwebPlan">Use WebSocket transmission, Caddy2 camouflage website, anti-identification, support CloudFlare CDN</sys:String>
    <sys:String x:Key="GroupBoxHeaderParameterTrojanGo">Parameter settings</sys:String>
    <sys:String x:Key="TextBlockTrojanGoDomain">Domain name:</sys:String>
    <sys:String x:Key="TextBlockTrojanGoPort">Port: 443</sys:String>
    <sys:String x:Key="TextBlockTrojanGoPassword">Password:</sys:String>
    <sys:String x:Key="TextBlockTrojanGoPasswordExplain">Use the existing password and paste it directly into the box</sys:String>
    <sys:String x:Key="TextBlockTrojanGoWebSocketPath">WebSocket Path:</sys:String>
    <sys:String x:Key="CheckBoxMuxSelect">Mux multiplexing</sys:String>
    <sys:String x:Key="TextBlockExplainCheckBoxMuxSelect">The settings here are only valid for the official client configuration file config.json, other clients need to be set manually, and the server automatically adapts.</sys:String>
    <sys:String x:Key="TextBlockExplainCheckBoxMuxSelectResult">This field does not appear in the QR code and sharing URL. The client needs to set it by itself, and the server enables automatic adaptation by default.</sys:String>
    <sys:String x:Key="ButtonTrojanGoTemplateOK">OK</sys:String>
    <sys:String x:Key="ButtonTrojanGoTemplateCancel">Cancel</sys:String>
    <!-- The following V2Ray template library interface -->
    <sys:String x:Key="GroupBoxHeaderV2RayTemplates">V2Ray Templates</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayHotPlan">Recommend</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayEarlyPlan">EarlyPlan</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayVlessProtocol">VLESS</sys:String>
    <sys:String x:Key="TextBlockVlessExplain">VLESS is a  lightweight transmission protocol. Unlike VMess, VLESS don't depend on the system time. The authentication method is also UUID, but alterId is not required. Currently VLESS does not have its own encryption, please use it for reliable channels, such as TLS. Advantages: It can effectively reduce host resource consumption. Currently VLESS does not support sharing.  Please ensure that both the client and server v2ray-core are the latest version.</sys:String>
    <sys:String x:Key="TextBlockVlessXtlsTcpExplain">XTLS works well on devices with low performance or without AES hard-decoding. For example, XTLS is used on hard routers, and the network speed can be doubled when the CPU is full, or the same The CPU occupancy rate is halved at Internet speed, and for mobile devices, the reduction in the amount of calculation means power saving.Version requires 4.29+ (Domain required) Not support CDN.</sys:String>
    <sys:String x:Key="TextBlockV2RayVlessTcpTlsWebExplain">Lightweight protocol VLESS, occupies less host resources, data TLS encrypted transmission, and Caddy2 is used as a disguised website on the node. Suitable for VPS with low configuration, or shared nodes by multiple people, the server client version requires 4.27+ (Domain required) Notsupport CDN.</sys:String>
    <sys:String x:Key="TextBlockVlessWebSocketTlsWebExplain">VLESS protocol, this type of solution with VMESS is more lightweight. Stability is strong, Caddy2 is front-facing, hidden proxy features, it is recognized as https traffic visiting the website, the strongest anti-blocking recognition, (Domain required) CDN is supported</sys:String>
    <sys:String x:Key="TextBlockVlessHttp2WebExplain">VLESS protocol, this type of solution with VMESS is more lightweight. Based on HTTP/2 transmission. Completely implemented in accordance with the HTTP/2 standard, with Caddy2 as the front, hidden proxy features, H2C protocol forwarding to V2Ray, (Domain required) CloudFlare CDN is not supported</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayTcpProtocol">TCP</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayWebSocketProtocol">WebSocket</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayHttp2Protocol">Http/2</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayMkcpProtocol">mKCP</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayQuicProtocol">QUIC</sys:String>
    <sys:String x:Key="GroupBoxHeaderParameterV2Ray">Parameter settings</sys:String>
    <sys:String x:Key="TextBlockV2RayServerPort">Server port:</sys:String>
    <sys:String x:Key="ButtonV2RayServerPortChange">Random</sys:String>
    <sys:String x:Key="TextBlockV2RayServerPortExplain">If TLS encryption is used, please keep the default port 443</sys:String>
    <sys:String x:Key="TextBlockV2RayUUIDExplain">Use the existing UUID and paste it directly into the box</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicUUID">QUIC Key:</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpSeedUUID">mKCP Seed:</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpExplain">Enable the mKCP Seed key to enhance anti-recognition, leave it blank to disable it. Version 4.24.2+</sys:String>
    <sys:String x:Key="TextBlockV2RayPath">Path:</sys:String>
    <sys:String x:Key="TextBlockV2RayVlessWsPath">VLESS ws path:</sys:String>
    <sys:String x:Key="TextBlockV2RayVmessTcpPath">VMESS tcp path:</sys:String>
    <sys:String x:Key="TextBlockV2RayVmessWsPath">VMESS ws path:</sys:String>
    <sys:String x:Key="TextBlockQuicEncryption">QUIC Encryption:</sys:String>
    <sys:String x:Key="TextBlockV2RayDomain">Domain name:</sys:String>
    <sys:String x:Key="TextBlockTrojanPassword">Trojan password is the same as V2ray UUID.</sys:String>
    <sys:String x:Key="TextBlockV2RayMaskSites">Mask a website:</sys:String>
    <sys:String x:Key="TextBoxV2RayMaskSitesTag">Set this option to increase proxy concealment (can be empty)</sys:String>
    <sys:String x:Key="TextBoxV2RayMaskSitesToolTip">Enter only the domain name, excluding "http" and "/" etc.</sys:String>
    <sys:String x:Key="ButtonRootProhibitsPasswordLoginToolTip">Only forbid root account to log in with password, please make sure that other login methods of root account have taken effect</sys:String>
    <sys:String x:Key="ButtonEnableRootPassWordToolTip">The root account will be enabled and set to password login</sys:String>
    <sys:String x:Key="ButtonEnableRootCertToolTip">will enable or set the root account as the key certificate login</sys:String>
    <sys:String x:Key="MessageBoxShow_MaskSitesToolTip">The input format of the fake URL is wrong! please enter again!</sys:String>
    <sys:String x:Key="TextBlockV2RayWebSocketTlsWebExplain">Strong stability, Caddy2 as the front, hidden proxy feature, recognized as https traffic to the website, the strongest anti-blocking recognition, domain name is required, CDN support</sys:String >
    <sys:String x:Key="TextBlockV2RayHttp2TlsWebExplain">based on HTTP/2 transmission. Completely implemented in accordance with the HTTP/2 standard, with Caddy2 as the front, hidden proxy features, H2C protocol forwarding to V2Ray, domain name is required, and CloudFlare CDN is not currently supported</sys:String>
    <sys:String x:Key="TextBlockXrayExplain">Currently Xray is a superset of V2Ray, and it will have a different development direction from V2Ray in the future.</sys:String>
    <sys:String x:Key="TextBlockVlessVmessXtlsTcpWebSocketExplainHot">VLESS over TCP with XTLS + fallback and shunt to WHATEVER (ultimate configuration), configured and recommended by rprx boss (author of xtls), configure the following six solutions at the same time on the server side, sharing the same domain name and port 443, WS can pass through CDN.</sys:String>
    <sys:String x:Key="TextBlockVlessVmessXtlsTcpWebSocketExplainHot5">VLESS over TCP with XTLS + fallback and shunt to WHATEVER (ultimate configuration), configured and recommended by rprx boss (author of xtls), configure the following five solutions at the same time on the server side, sharing the same domain name and port 443, WS can pass through CDN.(If you want to add XTLS scheme, please use Xray configuration)</sys:String>
    <sys:String x:Key="TextBlockV2RayTcpExplain">Encrypted data transmission will be recognized as unknown tcp traffic</sys:String>
    <sys:String x:Key="RadioButtonV2RayTcpHttp">TCP+Http camouflage</sys:String>
    <sys:String x:Key="TextBlockV2RayTcpHttpExplain">Encrypted data transmission and HTTP disguise will be recognized as http traffic, but not real http access</sys:String>
    <sys:String x:Key="TextBlockV2RayTcpTlsExplain">Data encrypted transmission, the transmission protocol uses TLS, it will be recognized as TLS traffic, not equivalent to https traffic characteristics (domain name required)</sys:String>
    <sys:String x:Key="RadioButtonV2RayTcpTlsSelfSigned">TCP+TLS (self-signed certificate)</sys:String>
    <sys:String x:Key="TextBlockV2RayTcpTlsSelfSignedExplain">Data encrypted transmission, the transmission protocol uses TLS, it will be recognized as TLS traffic, not equivalent to https traffic characteristics (no domain name required)</sys:String>
    <sys:String x:Key="TextBlockV2RaySelfSignedShadowrocketExplain">Shadowrocket (ios) needs to manually open the "Allow Unsafe" option</sys:String>
   <sys:String x:Key="TextBlockV2RayWebSocketExplain">Data encrypted transmission, the transmission protocol uses WebSocket, if TLS is not enabled, it will be recognized as WebSocket traffic.</sys:String>
    <sys:String x:Key="TextBlockV2RayWebSocketTlsExplain">Data encrypted transmission, the transmission protocol uses WebSocket, and TLS is enabled, it will be recognized as TLS traffic. (Domain name required)，Support CDN.</sys:String>
    <sys:String x:Key="RadioButtonV2RayWebSocketTlsSelfSigned">WebSocket+TLS (self-signed certificate)</sys:String>
    <sys:String x:Key="TextBlockV2RayWebSocketTlsSelfSignedExplain">Data encrypted transmission, the transmission protocol uses WebSocket, and TLS is enabled, and it will be recognized as TLS traffic. (No domain name required)</sys:String>
    <sys:String x:Key="TextBlockV2RayHttp2Explain">The transmission method based on HTTP/2. It is fully implemented in accordance with the HTTP/2 standard and requires a domain name</sys:String>
    <sys:String x:Key="RadioButtonV2RayHttp2SelfSigned">HTTP2 (self-signed certificate)</sys:String>
    <sys:String x:Key="TextBlockV2RayHttp2SelfSignedExplain">The transmission method based on HTTP/2. It is fully implemented in accordance with the HTTP/2 standard, uses a self-signed certificate, and does not require a domain name</sys:String>
    <sys:String x:Key="RadioButtonV2RayMkcpNone">mKCP (no camouflage)</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpNoneExplain">Encrypted data transmission to increase bandwidth usage and reduce delay, udp protocol, no camouflage, will be recognized as udp traffic</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpSRTPExplain">Same as mKCP (without camouflage), add disguised as SRTP packet, it will be recognized as video call data (such as FaceTime)</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpuTPExplain">Same as mKCP (without camouflage), adding a uTP packet disguised as a uTP data packet will be recognized as BT download data</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpWeChatExplain">Same as mKCP (no camouflage), adding data packets disguised as WeChat video calls</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpDTLSExplain">Same as mKCP (without camouflage), add disguised as DTLS 1.2 data packet</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpWireGuardExplain">Same as mKCP (without camouflage), with the addition of disguised as WireGuard packets. (Not the real WireGuard protocol)</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicShadowrocketExplain">Reminder: Shadowrocket currently does not support QUIC transmission mode.</sys:String>
    <sys:String x:Key="RadioButtonV2RayQuicNone">QUIC (no camouflage)</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicNoneExplain">Encrypted data transmission, no pretense will be recognized as udp traffic, originally created by Google, advantages: reduced delay, multiplexing, connection migration</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicSRTPExplain">Same as QUIC (no camouflage), adding a packet disguised as SRTP, it will be recognized as video call data (such as FaceTime)</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicuTPExplain">Same as QUIC (without camouflage), add disguised as uTP data packet, it will be recognized as BT download data</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicWeChatExplain">Same as QUIC (no camouflage), adding data packets disguised as WeChat video calls</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicDTLSExplain">Same as QUIC (without camouflage), add disguised as DTLS 1.2 packet</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicWireGuardExplain">Same as QUIC (without camouflage), adding a pretend to be a WireGuard packet. (Not the real WireGuard protocol)</sys:String>
    <!--The following is the time proofreading window-->
    <sys:String x:Key="RadioButtonNetworkTime">Sync Network Time</sys:String>
    <sys:String x:Key="TextBlockNetworkTime">Correct the remote host time to the network time. Note: The time of the local computer must also be synchronized with the network time, otherwise the local computer V2ray may have a connection error&#x0a;&#x0a;Recommendation: First use this method to proofread time</sys:String>
    <sys:String x:Key="RadioButtonLocalTime">Sync local time</sys:String>
    <sys:String x:Key="TextBlockLocalTime">Synchronize the remote host’s time to the local time. Note: The local computer’s time must be accurate and synchronized with the network time, otherwise there may be connection errors in other clients&#x0a;&#x0a;Use this method when you can’t check the time when using the network</sys:String>
    <sys:String x:Key="RadioButtonUpDateLocalTime">Update the local time</sys:String>
    <sys:String x:Key="TextBlockUpDateLocalTime">Synchronize the local computer time with the network time.&#x0a;&#x0a;Note: To use this function, you must run this program as an administrator</sys:String>
    <sys:String x:Key="ButtonTestTime">Detection Time</sys:String>
    <sys:String x:Key="ButtonProofreading">Proofread</sys:String>
    <!--The following is the client parameter display window-->
    <sys:String x:Key="GroupBoxHeaderClientParameter">Client configuration parameters</sys:String>
    <sys:String x:Key="TextBlockServerAddress">Server address:</sys:String>
    <sys:String x:Key="TextBlockServerPort">Port:</sys:String>
    <sys:String x:Key="TextBlockUserUUID">User ID(uuid)/Password:</sys:String>
    <sys:String x:Key="ButtonCopyV2RayUUIDtoClip">Copy</sys:String>
    <sys:String x:Key="MessageBoxShow_V2RayUUIDcopyedToClip">Copied to the clipboard!</sys:String>
    <sys:String x:Key="MessageBoxShow_V2RayEmptyToClip">Empty content!</sys:String>
    <sys:String x:Key="TextBlockV2RayAlterId">alterId:</sys:String>
    <sys:String x:Key="TextBlockV2RayAlterIdExplain">The default is 16, and you can fill in a value not exceeding 64. If the client does not have this option, leave it blank</sys:String>
    <sys:String x:Key="TextBlockEncryption">Encryption method:</sys:String>
    <sys:String x:Key="TextBlockTransferProtocol">Transfer Protocol:</sys:String>
    <sys:String x:Key="TextBlockCamouflageType">Camouflage type(Confuse):</sys:String>
    <sys:String x:Key="TextBlockIsOrNotTLS">TLS Set:</sys:String>
    <sys:String x:Key="TextBlockCopyToClipExplain">Tip: Double-click the above content window to copy it to the clipboard.</sys:String>
    <sys:String x:Key="TextBlockClientPath">Path:</sys:String>
    <sys:String x:Key="TextBlockClientMkcpQuicKey">mKCP Seed/QUIC key:</sys:String>
    <sys:String x:Key="TextBlockEncryptionIsAuto">default auto</sys:String>
    <sys:String x:Key="GrouBoxHeaderUrlOrQR">QR/URL</sys:String>
    <sys:String x:Key="TextBlockUsedParameter">The above parameters can be entered into the client manually or by scanning. The configuration and related files used for the official client have been stored in the directory. Click the OK button to open</sys:String>
    <sys:String x:Key="TextBlockQrURLexplainV2Ray">QR code and URL link can be used&#x0a;v2rayN(windows)&#x0a;Qv2ray(windows)&#x0a;Qv2ray(windows)&#x0a;Shadowrocket(ios)&#x0a;v2rayNG(Android)&#x0a;Import v2ray node&#x0a;&#x0a;Note: The Vless protocol requires manual input of configuration parameters, and the QR code and URL are invalid</sys:String>
    <sys:String x:Key="TextBlockQrURLexplainTrojan-go">" can be used for ShadowRocket (ios), ignore (Android), Qv2ray (windows) to scan codes and import URLs. Note: some clients may not support WebSocket mode ."</sys:String>
    <sys:String x:Key="TextBlockQrURLexplainTrojan">"Can be used for ShadowRocket (ios), ignore (Android), Qv2ray (windows) to scan codes and import URLs. Note: Some clients may not support WebSocket mode."</sys:String>
    <sys:String x:Key="TextBlockQrURLexplainNaiveProxy">URL import link for NaiveSharp (windows)</sys:String>
    <sys:String x:Key="TextBlockQrURLexplainSSR">Used to scan codes and import URL import links for ShadowsocksR (windows), SSRR (android), Shadowrocket (ios)</sys:String>
    <sys:String x:Key="TextBlockQrURLexplainSSmobile">For mobile phone client shadowsocks(android), Shadowrocket(ios) scan code and URL import link</sys:String>
    <sys:String x:Key="TextBlockQrURLexplainSSpc">For the computer client Shadowsocks (windows) scan code and URL import link</sys:String>
    <sys:String x:Key="TextBlockQrURLexplainSS">Scan code and URL import link for Shadowsocks (windows), shadowsocks(android), Shadowrocket(ios)</sys:String>
    <sys:String x:Key="TextBlockClientPromptSS">Reminder: The import format of the computer client Shadowsocks (windows) and the mobile client shadowsocks (android) and Shadowrocket (ios) are not compatible. Please select the corresponding format.</sys:String>
    <sys:String x:Key="RadioButtonMobileSS">Mobile phone</sys:String>
    <sys:String x:Key="RadioButtonPCSS">Computer side</sys:String>
    <sys:String x:Key="TextBlockShareQRcodeMtgTgIpv4">TG format QR</sys:String>
    <sys:String x:Key="TextBlockURLMtgTgIpv4">TG format URL (double-click to copy to the clipboard)</sys:String>
    <sys:String x:Key="TextBlockShareQRcodeMtgTmeIpv4">T.ME format QR</sys:String>
    <sys:String x:Key="TextBlockURLMtgTmeIpv4">T.ME format URL (double-click to copy to the clipboard)</sys:String>
    <!--The following is in the program-->
    <sys:String x:Key="MessageBoxShow_ErrorHostPortUserNotEmpty">Host address, host port, and user name are required and cannot be empty!!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorHostPortErr">The connection port contains non-numeric characters!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorHostPasswordNotEmpty">The login password is required and cannot be empty!!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorHostKeyNotEmpty">The key file is required and cannot be empty!!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorProxyAddressPortNotEmpty">If a proxy is selected, the proxy address and port cannot be empty!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorProxyUserPasswordNotEmpty">If the proxy needs to log in, the user name and password for proxy login cannot be empty!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorHostConnection">The remote host connection information is wrong, please check!</sys:String>
    <sys:String x:Key="MessageBoxShow_ChooseTemplate">Please select a configuration template first!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_FunctionResultErr">An error occurred, the installation was interrupted...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_Login">Logging in to the remote host...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_LoginSuccessful">The host login is successful!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_DetectionRootPermission">Detect whether it is running under root permissions...</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorRootPermission">Please use an account with root permissions to log in to the host! !</sys:String>
    <sys:String x:Key="DisplayInstallInfo_DetectionRootOK">Detection result: OK!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_TestExistSoft">Check whether the system has been installed</sys:String>
    <sys:String x:Key="MessageBoxShow_ExistedSoft">The remote host has been installed</sys:String>
    <sys:String x:Key="MessageBoxShow_ForceInstallSoft">, it is recommended to uninstall first, or reinstall the system, if the forced installation may fail. Do you force a reinstallation?</sys:String>
    <sys:String x:Key="DisplayInstallInfo_InstallationCanceledExit">installation canceled, exit</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ForceInstallSoft">Selected mandatory installation</sys:String>
    <sys:String x:Key="DisplayInstallInfo_NoInstalledSoft">Test result: not installed</sys:String>
    <sys:String x:Key="DisplayInstallInfo_CheckSystemRequirements">Check whether the system meets the installation requirements...</sys:String>
    <sys:String x:Key="MessageBoxShow_CurrentKernelVersion">The current system kernel version is</sys:String>
    <sys:String x:Key="MessageBoxShow_RequiredKernelVersionExplain">, V2ray requires the kernel to be 2.6.23 and above. Please upgrade the kernel and install again!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_KernelVersionNotMatch">The system kernel version does not meet the requirements, and the installation failed! !</sys:String>
    <sys:String x:Key="MessageBoxShow_MissingSystemComponents">The system lacks necessary installation components such as: apt||dnf||yum||zypper||Syetemd, the host system is recommended to use: CentOS 7/8, Debian 8/9/10 ,Ubuntu 16.04 and above</sys:String>
    <sys:String x:Key="DisplayInstallInfo_MissingSystemComponents">The system environment does not meet the requirements, and the installation fails! !</sys:String>
    <sys:String x:Key="DisplayInstallInfo_SystemRequirementsOK">Test result: OK!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_EnableSELinux">It is detected that the system has SELinux enabled and it is working in strict mode. It needs to be changed to relaxed mode! Modifying...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_SELinuxModifyOK">The modification is complete!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ProofreadingTime">Proofreading time...</sys:String>
    <sys:String x:Key="MessageBoxShow_TimeError">The difference between the local time and the remote host’s time exceeds the limit (90 seconds), please use'System Tools-->Time Correction' to verify the time before setting</sys:String>
    <sys:String x:Key="DisplayInstallInfo_TimeError">Time comparison failed...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_TimeOK">The time difference meets the requirements, OK!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_TestDomainResolve">is checking whether the domain name is resolved to the IP of the current VPS...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_OnlyIpv6HostDetect">is detecting whether it is a pure ipv6 host...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_NoIpDetect">A valid IP address was not detected...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_FindFastestSetUpNat64">Finding the fastest Nat64 gateway...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_FindFastestSetUpNat64Failed">Failed to find a valid Nat64 gateway...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_FindFastestNat64AsIs">The fastest Nat64 gateway of the current host is:</sys:String>
    <sys:String x:Key="DisplayInstallInfo_SetUpNat64">Nat64 gateway is being set up......</sys:String>
    <sys:String x:Key="DisplayInstallInfo_DeleteSetUpNat64">Nat64 gateway is being deleted...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_DomainResolveOK">The resolution is correct! OK!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_OnlyIpv6">detects that the current host is a pure ipv6 host, it is not currently supported!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ErrorDomainResolve">The domain name could not be correctly resolved to the IP of the current VPS! Installation failed!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorDomainResolve">The domain name cannot be correctly resolved to the IP of the current VPS, please check! If the resolution setting is correct, please wait for it to take effect before retrying the installation. If the domain name uses CDN, please close it first!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_TestPortUsed">Detect port occupancy...</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorPortUsed">If one or all of the 80/443 ports are occupied, will the program occupying 80/443 ports be forcibly stopped?</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ErrorPortUsedFail">The port is occupied and the installation failed...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ReleasePort">is releasing port 80/443...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ReleasePortOK">The release of port 80/443 is complete!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorPortUsedOther">The port is occupied, will the program occupying this port be forcibly stopped?</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ReleasePortOther">Release the port...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ReleasePortOKOther">The port is released!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_PortNotUsed">Test result: Not occupied!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartInstalling">The system environment has been tested and the installation requirements are met, and the deployment begins...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_OpenFireWallPort">Open the corresponding port of the firewall...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartInstallSoft">Installing</sys:String>
    <sys:String x:Key="DisplayInstallInfo_DownloadScriptFailed">File download failed!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_CompilingSS">Compiling, please wait patiently.............</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorInstallSoftFail">The installation failed, the script runs incorrectly!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_SoftInstallSuccess">The installation is successful!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UploadSoftConfig">After installation, upload the configuration file......</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartInstallAcmeSh">Installing acme.sh......</sys:String>
    <sys:String x:Key="DisplayInstallInfo_AcmeShInstallSuccess">acme.sh is installed successfully!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ErrorAcmeShInstallFail">acme.sh installation failed! The reason is unknown, please ask the developer!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartApplyCert">Apply for domain name certificate...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ApplyCertSuccess">The certificate application is successful!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ApplyCertFail">Certificate application failed! The reason is unknown, please ask the developer!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_IntallCertToSoft">Install the certificate to</sys:String>
    <sys:String x:Key="DisplayInstallInfo_IntallCertToSoftOK">The certificate is successfully installed to</sys:String>
    <sys:String x:Key="DisplayInstallInfo_IntallCertToSoftFail">The certificate is installed to</sys:String>
    <sys:String x:Key="DisplayInstallInfo_InstallCertFailAsk">failed, the reason is unknown, you can ask the developer!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartInstallCaddy">Install Caddy...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_NotInstalledCaddy">Test result: Caddy is not installed!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ErrorInstallCaddyFail">The installation of Caddy failed!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_InstalledCaddyOK">Caddy installed successfully!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UpgradeCaddy">is upgrading the Caddy v2.2.0 beta version for Http2Web mode!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UploadCaddyConfig">Upload Caddy configuration file...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UploadCaddyConfigFailed">Caddy configuration file upload failed!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UploadCaddyConfigOK">The Caddy configuration file is uploaded successfully, OK!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartCaddyService">Starting Caddy...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartCaddyServiceOK">Caddy started successfully!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartCaddyServiceFail">Caddy failed to start!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartCaddyServiceSecond">Starting Caddy (second attempt)!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartCaddyServiceSecondFail">Caddy failed to start (second time)! Exit the installation!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_CaddyServiceFailedExit">Caddy failed to start, the reason is unknown! Please ask the developer!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartSoft">Starting</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartSoftOK">Startup is successful!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartSoftFail">Startup failed!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartSoftSecond">is trying to start the second time</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartSoftSecondFail">failed to start (second time)! Exit the installation!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartSoftFailedExit">Startup failed, the reason is as above! Please troubleshoot the reason!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_TestBBR">BBR test...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_EnableBBR">Enable BBR...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_BBRisEnabled">BBR has been enabled!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_BBRFailed">The system does not meet the conditions for enabling BBR, and the enabling failed!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_BBREnabledSuccess">BBR is successfully activated!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_GenerateClientConfig">Generate client configuration...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_GetClientConfigFailed">Failed to obtain client configuration!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ProxyInstalledOK">The installation is successful, Enjoy it!!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_LoginFailed">Installation Failed!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorLoginOccurred">An error occurred!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorLoginUserOrPassword">Wrong password or wrong username!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorLoginHostOrPort">Please check whether the host address and port are correct, if it passes the proxy, please check whether the proxy is working properly</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorLoginKey">The selected key file is wrong or the format is wrong!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorLoginKeyOrUser">Login using the key, the key file is wrong or the user name is wrong!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorLoginHostOrProxyPort">The host address is wrong. If a proxy is used, it may also be the wrong port to connect to the proxy!</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorUpgradeSoftNotInstall">Exit! Reason: The remote host is not installed</sys:String>
    <sys:String x:Key="DisplayInstallInfo_OldScriptInstalledV2Ray">V2Ray using the old installation script is detected...</sys:String>
    <sys:String x:Key="MessageBoxShow_OldScriptInstalledV2Ray">The V2Ray using the old installation script is detected. Do you want to uninstall the old version and reinstall it with the new installation script?</sys:String>
    <sys:String x:Key="DisplayInstallInfo_RemoveOldScriptInstalledV2Ray">Uninstalling the old version...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_RemoveOldVersionOK">Uninstall the old version, OK!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_InstallNewVersion">Install the new version...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_MoveOriginalConfig">Migrate the original configuration file.</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UpgradedNewVersion">has been updated to the latest version.</sys:String>
    <sys:String x:Key="DisplayInstallInfo_CurrentVersion">The current version of the remote host is: v</sys:String>
    <sys:String x:Key="DisplayInstallInfo_NewVersion">The latest version is:</sys:String>
    <sys:String x:Key="DisplayInstallInfo_IsOrNoUpgradeNewVersion">Is it upgraded to the latest version?</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartUpgradeNewVersion">Upgrading to the latest version</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UpgradeNewVersionOK">The upgrade is successful! It is currently the latest version!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UpgradeNewVersionFail">The upgrade failed. The reason is unknown. Please ask the developer!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UpgradeVersionCancel">Upgrade is cancelled, exit!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_IsNewVersion">The remote host is currently the latest version:</sys:String>
    <sys:String x:Key="DisplayInstallInfo_NotUpgradeVersion">No need to upgrade! drop out!</sys:String>
    <sys:String x:Key="MessageBoxShow_DomainNotEmpty">The domain name cannot be empty, please check the relevant parameter settings!</sys:String>
    <sys:String x:Key="MessageBoxShow_PleaseInstallSoftAtX64">Please install in x86_64 system</sys:String>
    <sys:String x:Key="DisplayInstallInfo_BackTrojanConfig">Back up the Trojan configuration file...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_RestoreTrojanConfig">Restore the Trojan configuration file...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ExistedCaddy">"Caddy has been installed on the remote host, but I’m not sure whether it supports forward proxy. Do I force a reinstallation?"</sys:String>
    <sys:String x:Key="DisplayInstallInfo_RemoveCaddyOrRebuiled">Please uninstall Caddy or reinstall the VPS system first!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_InstallRelySoft">Installing dependent software......</sys:String>
    <sys:String x:Key="DisplayInstallInfo_SoftInstalledOK">The installation is complete! OK!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_StartCaddy">Installing Caddy.....</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UpgradeNaiveProxy">The server is being upgraded for NaiveProxy</sys:String>
    <sys:String x:Key="DisplayInstallInfo_UpgradeNaiveProxyOK">The upgrade is complete, OK!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_OptimizeNetwork">Optimizing network parameters...</sys:String>
    <sys:String x:Key="DisplayInstallInfo_OptimizeNetworkOK">Optimize network parameters, OK!</sys:String>
    <!--The following is the Xray client documentation-->
    <sys:String x:Key="readmeTxtXrayExplainLine01">This file is the client configuration file used by the official Xay program. It is configured in global mode, socks5 address: 127.0.0.1:1080, http proxy address: 127.0.0.1:1081</sys:String>
    <sys:String x:Key="readmeTxtXrayExplainLine02">Xray official website: https://github.com/XTLS/Xray-core</sys:String>
    <sys:String x:Key="readmeTxtXrayExplainLine03">Xray official program download address: https://github.com/XTLS/Xray-core/releases</sys:String>
    <sys:String x:Key="readmeTxtXrayExplainLine04">Download the corresponding version, select xray-windows-64.zip or xray-windows-32.zip for Windows, extract xray.exe after decompression. Put it in the same directory as config.json, just run xray.exe.</sys:String>
    <!--The following is the V2Ray client description file-->
    <sys:String x:Key="readmeTxtV2RayExplainLine01">This file is the client configuration file used by the official V2Ray program. It is configured in global mode, socks5 address: 127.0.0.1:1080, http proxy address: 127.0.0.1:1081</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine02">v2ray official website: https://www.v2ray.com/</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine03">v2ray official program download address: https://github.com/v2ray/v2ray-core/releases</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine04">download the corresponding version, Windows select v2ray-windows-64.zip or v2ray-windows-32.zip, extract v2ctl.exe and v2ray.exe after decompression. Put it in the same directory as config.json, just run v2ray.exe.</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine05">This file is v2rayN, Qv2ray, v2rayNG(Android), Shadowrocket(ios) scan code import node</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine06">v2rayN download URL: https://github.com/2dust/v2rayN/releases</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine07">Qv2ray download URL: https://github.com/Qv2ray/Qv2ray/releases</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine08">v2rayNG(Android) download URL: https://github.com/2dust/v2rayNG/releases</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine09">v2rayNG (Android) download URL on Google Play: https://play.google.com/store/apps/details?id=com.v2ray.ang</sys:String >
    <sys:String x:Key="readmeTxtV2RayExplainLine10">Shadowrocket(ios) download, you need to use the AppleID of the foreign region. Please Google method yourself.</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine11">This file is v2rayN, Qv2ray, v2rayNG(Android), Shadowrocket(ios) copy and paste the vmess URL of the imported node</sys:String>
    <sys:String x:Key="readmeTxtV2RayExplainLine12">Server general connection configuration parameters</sys:String>
    <!--The following is the Trojan-go client description file-->
    <sys:String x:Key="readmeTxtTrojan-goExplainLine01">This file is the client configuration file used by the official Trojan-go program, configured in global mode, http and socks5 address: 127.0.0.1:1080</sys:String >
    <sys:String x:Key="readmeTxtTrojan-goExplainLine02">Trojan-go official website: https://github.com/p4gefau1t/trojan-go</sys:String>
    <sys:String x:Key="readmeTxtTrojan-goExplainLine03">Trojan-go official program download address: https://github.com/p4gefau1t/trojan-go/releases</sys:String>
    <sys:String x:Key="readmeTxtTrojan-goExplainLine04">Download the corresponding version, select Trojan-go-x.xx-win.zip for Windows, extract trojan-go.exe after decompression. Put it in the same directory as config.json, just run trojan-go.exe.</sys:String>
    <sys:String x:Key="readmeTxtTrojan-goExplainLine05">This file is for Qv2ray (windows), ignore (Android) scan code import node</sys:String>
    <sys:String x:Key="readmeTxtTrojan-goExplainLine06">Qv2ray (windows) download URL: https://github.com/Qv2ray/Qv2ray/releases</sys:String>
    <sys:String x:Key="readmeTxtTrojan-goExplainLine07">igniter (Android) download URL: https://github.com/trojan-gfw/igniter/releases</sys:String>
    <sys:String x:Key="readmeTxtTrojan-goExplainLine08">Shadowrocket(ios) download, you need to use the AppleID of the foreign region. Please Google method yourself.</sys:String>
    <sys:String x:Key="readmeTxtTrojan-goExplainLine09">This file is Qv2ray (windows), ignore (Android)copy and paste the URL of the imported node</sys:String>
    <sys:String x:Key="readmeTxtTrojan-goExplainLine10">Server general connection configuration parameters</sys:String>
    <!--The following is the documentation for the Trojan client-->
    <sys:String x:Key="readmeTxtTrojanExplainLine01">This file is the client configuration file used by the official Trojan program. It is configured in global mode, http and socks5 address: 127.0.0.1:1080</sys:String>
    <sys:String x:Key="readmeTxtTrojanExplainLine02">Trojan official website: https://trojan-gfw.github.io/trojan/</sys:String>
    <sys:String x:Key="readmeTxtTrojanExplainLine03">Trojan official program download address: https://github.com/trojan-gfw/trojan/releases</sys:String>
    <sys:String x:Key="readmeTxtTrojanExplainLine04">Download the corresponding version, select Trojan-x.xx-win.zip for Windows, extract trojan.exe after decompression. Put it in the same directory as config.json, just run trojan.exe.</sys:String>
    <sys:String x:Key="readmeTxtTrojanExplainLine05">This file is Qv2ray (windows), ignore (Android), Shadowrocket (ios) scan code import node</sys:String>
    <sys:String x:Key="readmeTxtTrojanExplainLine06">Qv2ray (windows) download URL: https://github.com/Qv2ray/Qv2ray/releases</sys:String>
    <sys:String x:Key="readmeTxtTrojanExplainLine07">igniter (Android) download URL: https://github.com/trojan-gfw/igniter/releases</sys:String>
    <sys:String x:Key="readmeTxtTrojanExplainLine08">Shadowrocket(ios) download, you need to use the AppleID of the foreign region. Please Google method yourself.</sys:String>
    <sys:String x:Key="readmeTxtTrojanExplainLine09">This file is Qv2ray (windows), ignore (Android), Shadowrocket (ios) copy and paste the URL of the imported node</sys:String>
    <sys:String x:Key="readmeTxtTrojanExplainLine10">Server general connection configuration parameters</sys:String>
    <!--The following is the NaiveProxy client documentation-->
    <sys:String x:Key="readmeTxtNaiveProxyExplainLine01">This file is the client configuration file used by the official NaiveProxy program, configured in global mode, socks5 address: 127.0.0.1:1080</sys:String>
    <sys:String x:Key="readmeTxtNaiveProxyExplainLine02">NaiveProxy official website: https://github.com/klzgrad/naiveproxy</sys:String>
    <sys:String x:Key="readmeTxtNaiveProxyExplainLine03">NaiveProxy official program download address: https://github.com/klzgrad/naiveproxy/releases</sys:String>
    <sys:String x:Key="readmeTxtNaiveProxyExplainLine04">download the corresponding version, select naiveproxy-x.xx-win.zip for Windows, extract naive.exe after decompression. Put it in the same directory as config.json, just run naive.exe.</sys:String>
    <sys:String x:Key="readmeTxtNaiveProxyExplainLine05">This file is NaiveSharp (windows) copy and paste the URL of the imported node</sys:String>
    <sys:String x:Key="readmeTxtNaiveProxyExplainLine06">NaiveSharp(windows) download URL: https://github.com/KevinZonda/NaiveSharp/releases</sys:String>
    <sys:String x:Key="readmeTxtNaiveProxyExplainLine07">Server general connection configuration parameters</sys:String>
    <!--The following is the SSR+TLS+Caddy client documentation-->
    <sys:String x:Key="readmeTxtSSRExplainLine05">This file is for ShadowsocksR (windows), SSRR (Android), Shadowrocket (ios) scan code import node</sys:String>
    <sys:String x:Key="readmeTxtSSRExplainLine06">ShadowsocksR (windows) download URL: https://github.com/shadowsocksrr/shadowsocksr-csharp/releases</sys:String>
    <sys:String x:Key="readmeTxtSSRExplainLine07">SSRR (Android) download URL: https://github.com/shadowsocksrr/shadowsocksr-android/releases</sys:String>
    <sys:String x:Key="readmeTxtSSRExplainLine08">Shadowrocket(ios) download, you need to use the AppleID of the foreign region. Please Google method yourself.</sys:String>
    <sys:String x:Key="readmeTxtSSRExplainLine09">This file is ShadowsocksR (windows), SSRR (Android), Shadowrocket (ios) copy and paste the URL of the imported node</sys:String>
    <sys:String x:Key="readmeTxtSSRExplainLine10">Server general connection configuration parameters</sys:String>
    <!--The following is the SS client description file-->
    <sys:String x:Key="readmeTxtExplainLineSS01">This file is a Shadowsocks (windows) scan code import node</sys:String>
    <sys:String x:Key="readmeTxtExplainLineSS02">This file is Shadowsocks (windows) copy and paste the URL of the imported node</sys:String>
    <sys:String x:Key="readmeTxtExplainLineSS05">This file is for shadowsocks (Android), Shadowrocket (ios) scan code to import nodes</sys:String>
    <sys:String x:Key="readmeTxtExplainLineSS06">Shadowsocks (windows) download URL: https://github.com/shadowsocks/shadowsocks-windows/releases</sys:String>
    <sys:String x:Key="readmeTxtExplainLineSS07">shadowsocks (Android) download URL: https://github.com/shadowsocks/shadowsocks-android/releases</sys:String>
    <sys:String x:Key="readmeTxtExplainLineSS08">Shadowrocket(ios) download, you need to use the AppleID of the foreign region. Please Google method yourself.</sys:String>
    <sys:String x:Key="readmeTxtExplainLineSS09">This file is shadowsocks (Android), Shadowrocket (ios) copy and paste the URL of the imported node</sys:String>
    <sys:String x:Key="readmeTxtExplainLineSS10">Server general connection configuration parameters</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS">plug-in instructions</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS01">ProxySU defaults all plug-ins, under the subfolder plugins of the folder where the Shadowsocks (windows) run file is located.</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS02">Instructions for manually installing the plug-in on the computer</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS03">First download the plug-in, the download address of each plug-in Windows client is:</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS04">Simple-obfs: https://github.com/shadowsocks/simple-obfs/releases only download obfs-local.zip</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS05">V2ray-plugin: https://github.com/shadowsocks/v2ray-plugin/releases 64-bit system selection: v2ray-plugin-windows-amd64-vx.xxtar.gz , 32-bit system selection: v2ray-plugin-windows-386-vx.xxtar.gz (x is a number, is the version number)</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS06">Kcptun-plugin: https://github.com/shadowsocks/kcptun/releases 64-bit system selection: kcptun-windows-amd64-xxxxxx.tar.gz, 32-bit system selection ：Kcptun-plugin-windows-386-xxxxxx.tar.gz (x is a number, is the version number)</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS07">GoQuiet-plugin: https://github.com/cbeuw/GoQuiet/releases 64-bit system selection: gq-client-windows-amd64-xxxexe, 32-bit system selection: gq-client-windows-386-xxxexe (x is a number, is the version number)</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS08">Cloak-plugin: https://github.com/cbeuw/Cloak/releases 64-bit system selection: ck-client-windows-amd64-xxxexe, 32-bit system selection: ck-client-windows-386-xxxexe (x is a number, is the version number)</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS09">In the folder where the Shadowsocks (windows) run file is located, create a new folder plugins, and copy all the files (two) extracted from obfs-local.zip to plugins, v2ray -plugin download the file, unzip the file, copy it to plugins, and rename it to: v2ray-plugin.exe. Kcptun-plugin downloads the file, unzip the two files, copy the file starting with client_windows into the plugins, and rename it to: kcptun-client.exe. The file downloaded by GoQuiet-plugin is directly copied to the plugin and renamed to: goquiet-client.exe. The file downloaded by Cloak-plugin is directly copied to the plugin and renamed to: cloak-client.exe</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSS10">installation completed</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSSandroid02">Mobile Android client plug-in installation instructions</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSSandroid03">first download the plug-in, the download address of each plug-in Android client is:</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSSandroid04">Simple-obfs: https://github.com/shadowsocks/simple-obfs-android/releases only download obfs-local-nightly-xxxapk (x is a number, is the version Number)</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSSandroid05">V2ray-plugin: https://github.com/shadowsocks/v2ray-plugin-android/releases Generally choose v2ray--universal-xxxapk (x is a number, is the version number )</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSSandroid06">Kcptun-plugin: https://github.com/shadowsocks/kcptun-android/releases Generally choose kcptun--universal-xxxapk (x is a number, is the version number)</sys:String>
    <sys:String x:Key="readmeTxtPluginExplainSSandroid07">Transfer the above apk file to the phone and install it!</sys:String>
    <!--<sys:String x:Key="TabItemHeaderAppDeployment">Deployment</sys:String>
    <sys:String x:Key="TabItemHeaderResourceTools">Resource Tools</sys:String>
    <sys:String x:Key="TextBlockHostName">Host:</sys:String>
    <sys:String x:Key="TextBoxHostNamePrompt">IP or Domain (Not empty)</sys:String>
    <sys:String x:Key="TextBlockHostPart">Port:</sys:String>
    <sys:String x:Key="TextBlockHostUser">User:</sys:String>
    <sys:String x:Key="TextBlockHostPassword">Password:</sys:String>
    <sys:String x:Key="TextBlockSetUpProcessing">Waiting for Deployment</sys:String>
    <sys:String x:Key="TabItemHeaderSysTools">Tools</sys:String>
    <sys:String x:Key="ButtonV2RayTemplateConfiguration">V2Ray Templates</sys:String>
    <sys:String x:Key="ButtonV2RayOneKeyInstall">Install V2ray</sys:String>
    <sys:String x:Key="ButtonUpdateV2ray">Upgrade V2Ray</sys:String>
    <sys:String x:Key="Button_canel">Canel</sys:String>
    <sys:String x:Key="ButtonTrojanGoTemplate">Trojan-Go Templates</sys:String>
    <sys:String x:Key="ButtonTrojanGoSetUp">Install Trojan-Go</sys:String>
    <sys:String x:Key="ButtonUpdateTrojanGo">Upgrade Trojan-Go</sys:String>
    <sys:String x:Key="ButtonTrojanGoCancel">Canel</sys:String>
    <sys:String x:Key="GroupBoxHeaderParameterTrojan">Parameter</sys:String>
    <sys:String x:Key="TextBlockTrojanTemplateExplanation">Plan: Trojan+TLS+Caddy</sys:String>
    <sys:String x:Key="TextBlockTrojanServerDomain">Server Domain:</sys:String>
    <sys:String x:Key="TextBlockTrojanPort">Port: 443</sys:String>
    <sys:String x:Key="TextBoxDomainPrompt">Domain name cannot be empty</sys:String>
    <sys:String x:Key="TextBlockTrojanHostPassword">Password:</sys:String>
    <sys:String x:Key="ButtonTrojanChangePassword">Change</sys:String>
    <sys:String x:Key="ButtonTrojanSetUp">Install Trojan</sys:String>
    <sys:String x:Key="ButtonUpdateTrojan">Upgrade Trojan</sys:String>
    <sys:String x:Key="ButtonTrojanCancel">Cancel</sys:String>
    <sys:String x:Key="TextBlockNaiveProxyTemplateExplanation">Plan: NaiveProxy+TLS+Caddy</sys:String>
    <sys:String x:Key="ButtonNaiveProxyChangeUser">Change</sys:String>
    <sys:String x:Key="ButtonNavieSetUp">Install NaiveProxy</sys:String>
    <sys:String x:Key="ButtonNaiveCancel">Cancel</sys:String>
    <sys:String x:Key="ButtonProofreadTime">Proofread Time</sys:String>
    <sys:String x:Key="ButtonClearOccupiedPorts">Release Port 80/443</sys:String>
    <sys:String x:Key="ButtonTestAndEnableBBR">Turn on BBR</sys:String>
    <sys:String x:Key="ButtonWebBrowserHomePage">Home</sys:String>
    <sys:String x:Key="ButtonWebBrowserForward">Forward</sys:String>
    <sys:String x:Key="ButtonWebBrowserBack">Back</sys:String>
    <sys:String x:Key="TextBlockWebExplain">Due to well-known reasons, loading is slow at certain times, please be patient</sys:String>
    <sys:String x:Key="GroupBoxHeaderTrojanGoTemplates">Trojan-go Templates</sys:String>
    <sys:String x:Key="TextBlockTrojanGoTLSwebPlan">HTTP/2 transmission, Caddy2 camouflage website, anti-identification, does not support CloudFlare CDN temporarily</sys:String>
    <sys:String x:Key="TextBlockTrojanGoWebSocketTLSwebPlan">Use WebSocket transmission, Caddy2 camouflage website, anti-identification, support CloudFlare CDN</sys:String>
    <sys:String x:Key="GroupBoxHeaderParameterTrojanGo">Parameter</sys:String>
    <sys:String x:Key="TextBlockTrojanGoDomain">Domain:</sys:String>
    <sys:String x:Key="TextBlockTrojanGoPort">Port: 443</sys:String>
    <sys:String x:Key="TextBlockTrojanGoPassword">Password: </sys:String>
    <sys:String x:Key="TextBlockTrojanGoPasswordExplain">Use the existing password and paste it directly into the box</sys:String>
    <sys:String x:Key="TextBlockTrojanGoWebSocketPath">WebSocket Path: </sys:String>
    <sys:String x:Key="ButtonTrojanGoTemplateOK">OK</sys:String>
    <sys:String x:Key="ButtonTrojanGoTemplateCancel">Cancel</sys:String>
    <sys:String x:Key="GroupBoxHeaderV2RayTemplates">V2Ray Templates</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayHotPlan">Recommend</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayTcpProtocol">TCP</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayWebSocketProtocol">WebSocket</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayHttp2Protocol">Http/2</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayMkcpProtocol">mKCP</sys:String>
    <sys:String x:Key="TabItemHeaderV2RayQuicProtocol">QUIC</sys:String>
    <sys:String x:Key="GroupBoxHeaderParameterV2Ray">Parameter</sys:String>
    <sys:String x:Key="TextBlockV2RayServerPort">Port: </sys:String>
    <sys:String x:Key="ButtonV2RayServerPortChange">Change</sys:String>
    <sys:String x:Key="TextBlockV2RayServerPortExplain">TLS encryption, keep port 443</sys:String>
    <sys:String x:Key="TextBlockV2RayUUIDExplain">Use the existing UUID and paste it directly into the box</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicUUID">mKCP/QUIC Key</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpExplain">Enable mKCP key to enhance anti-recognition, Blank to disabled, 4.24.2+ required, V2rayN not support</sys:String>
    <sys:String x:Key="TextBlockV2RayPath">Path: </sys:String>
    <sys:String x:Key="TextBlockV2RayDomain">Domain: </sys:String>
    <sys:String x:Key="TextBlockV2RayMaskSites">Shield Websites: </sys:String>
    <sys:String x:Key="TextBoxV2RayMaskSitesTag">Increase the concealment of the agent (can be empty)</sys:String>
    <sys:String x:Key="TextBlockV2RayWebSocketTlsWebExplain">Strong stability, Caddy2 is front-facing, hidden proxy features, it is recognized as https traffic visiting the website, the strongest anti-blocking recognition, domain name is required, CDN support</sys:String>
    <sys:String x:Key="TextBlockV2RayHttp2TlsWebExplain">Based on HTTP/2 transmission. Completely implemented in accordance with the HTTP/2 standard, with Caddy2 as the front end, hidden proxy features, H2C protocol forwarding to V2Ray, domain name is required, and CloudFlare CDN is not supported temporarily</sys:String>
    <sys:String x:Key="TextBlockV2RayTcpExplain">Encrypted data transmission will be recognized as unknown tcp traffic</sys:String>
    <sys:String x:Key="RadioButtonV2RayTcpHttp">TCP+Http(Disguise)</sys:String>
    <sys:String x:Key="TextBlockV2RayTcpHttpExplain">Encrypted transmission of data and http disguise will be recognized as http traffic, but not real http access</sys:String>
    <sys:String x:Key="TextBlockV2RayTcpTlsExplain">Encrypted data transmission, the transmission protocol uses TLS, it will be recognized as TLS traffic, not equivalent to https traffic characteristics (domain name required)</sys:String>
    <sys:String x:Key="RadioButtonV2RayTcpTlsSelfSigned">TCP+TLS(Self-signed)</sys:String>
    <sys:String x:Key="TextBlockV2RayTcpTlsSelfSignedExplain">Encrypted data transmission, the transmission protocol uses TLS, it will be recognized as TLS traffic, not equivalent to https traffic characteristics (no domain name required)</sys:String>
    <sys:String x:Key="TextBlockV2RaySelfSignedShadowrocketExplain">Shadowrocket (ios) needs to manually turn on the "Allow Insecure" option</sys:String>
    <sys:String x:Key="TextBlockV2RayVlessTcpTlsWebExplain">Lightweight protocol VLESS, occupies less host resources, data TLS encrypted transmission, and Caddy2 is used as a disguised website on the node. Suitable for low-configuration VPS, or multiple people sharing nodes, the server client version requires 4.27+ (domain name required)</sys:String>
    <sys:String x:Key="TextBlockV2RayWebSocketExplain">Data is encrypted for transmission. The transmission protocol uses WebSocket. If TLS is not enabled, it will be recognized as WebSocket traffic.</sys:String>
    <sys:String x:Key="TextBlockV2RayWebSocketTlsExplain">Data is encrypted for transmission, the transmission protocol uses WebSocket, and TLS is enabled, it will be recognized as TLS traffic. (Domain name required)</sys:String>
    <sys:String x:Key="RadioButtonV2RayWebSocketTlsSelfSigned">WebSocket+TLS (Self-signed)</sys:String>
    <sys:String x:Key="TextBlockV2RayWebSocketTlsSelfSignedExplain">Data is encrypted for transmission, the transmission protocol uses WebSocket, and TLS is enabled, it will be recognized as TLS traffic. (No domain name required)</sys:String>
    <sys:String x:Key="TextBlockV2RayHttp2Explain">Transmission method based on HTTP/2. It is fully implemented in accordance with the HTTP/2 standard and requires a domain name</sys:String>
    <sys:String x:Key="RadioButtonV2RayHttp2SelfSigned">HTTP2 (Self-signed)</sys:String>
    <sys:String x:Key="TextBlockV2RayHttp2SelfSignedExplain">Transmission method based on HTTP/2. It is fully implemented in accordance with the HTTP/2 standard, uses a self-signed certificate, and does not require a domain name</sys:String>
    <sys:String x:Key="RadioButtonV2RayMkcpNone">mKCP(No disguise)</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpNoneExplain">Data encrypted transmission to increase bandwidth usage and reduce delay, udp protocol, no camouflage, will be recognized as udp traffic</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpSRTPExplain">Same as mKCP (no camouflage), adding a packet disguised as SRTP will be recognized as video call data (such as FaceTime)</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpuTPExplain">Same as mKCP (without camouflage), add disguised as uTP data packet, it will be recognized as BT download data</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpWeChatExplain">Same as mKCP (no camouflage), adding data packets disguised as WeChat video calls</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpDTLSExplain">Same as mKCP (no masquerading), adding masquerading as DTLS 1.2 packets</sys:String>
    <sys:String x:Key="TextBlockV2RayMkcpWireGuardExplain">Same as mKCP (without camouflage), adding a pretend to be a WireGuard packet. (Not a real WireGuard protocol)</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicShadowrocketExplain">Reminder: Shadowrocket currently does not support QUIC transmission mode.</sys:String>
    <sys:String x:Key="RadioButtonV2RayQuicNone">QUIC(No disguise)</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicNoneExplain">Encrypted data transmission, no pretense will be recognized as udp traffic, produced by Google, advantages: reduced delay, multiplexing, connection migration</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicSRTPExplain">Same as QUIC (no camouflage), adding a packet disguised as SRTP will be recognized as video call data (such as FaceTime)</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicuTPExplain">Same as QUIC (no camouflage), adding a packet disguised as uTP, it will be recognized as BT download data</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicWeChatExplain">Same as QUIC (no camouflage), adding data packets disguised as WeChat video calls</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicDTLSExplain">Same as QUIC (no masquerading), adding masquerading as DTLS 1.2 packets</sys:String>
    <sys:String x:Key="TextBlockV2RayQuicWireGuardExplain">Same as QUIC (without camouflage), adding a packet disguised as WireGuard. (Not a real WireGuard protocol)</sys:String>
    --><!--以下为程序内的--><!--
    <sys:String x:Key="MessageBoxShow_ErrorHostConnection">The remote host connection information is wrong, please check</sys:String>
    <sys:String x:Key="MessageBoxShow_ChooseTemplate">Please select a configuration template first!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_Login">Logging in to the remote host......</sys:String>
    <sys:String x:Key="DisplayInstallInfo_LoginSuccessful">Host login is successful!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_DetectionRootPermission">Check whether it is running under root privileges...</sys:String>
    <sys:String x:Key="MessageBoxShow_ErrorRootPermission">Please log in to the host with an account with root privileges!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_DetectionRootOK">Test result: OK!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_TestExistV2Ray">Check whether the system has installed V2ray....</sys:String>
    <sys:String x:Key="MessageBoxShow_ExistedV2Ray">V2ray has been installed on the remote host, do you force it to reinstall?</sys:String>
    <sys:String x:Key="DisplayInstallInfo_InstallationCanceledExit">Installation canceled, exit</sys:String>
    <sys:String x:Key="DisplayInstallInfo_ForceInstallV2Ray">You have chosen to install V2Ray forcefully!</sys:String>
    <sys:String x:Key="DisplayInstallInfo_NoInstalledV2Ray">Test result: V2Ray is not installed!</sys:String>-->


    <!--<sys:String x:Key="BtnOK">OK</sys:String>
    <sys:String x:Key="HdNo">No.</sys:String>
    <sys:String x:Key="HdName">Name</sys:String>
    <sys:String x:Key="HdGender">Gender</sys:String>
    <sys:String x:Key="HdDept">Dept</sys:String>
    <sys:String x:Key="HdEmail">Email</sys:String>
    <sys:String x:Key="HdTel">Tel</sys:String>
    <sys:String x:Key="MsgShowTime">Now</sys:String>
    <sys:String x:Key="BtnOK1">OK</sys:String>
    <sys:String x:Key="HdNo1">No.</sys:String>
    <sys:String x:Key="HdName1">Name</sys:String>
    <sys:String x:Key="HdGender1">Gender</sys:String>
    <sys:String x:Key="HdDept1">Dept</sys:String>
    <sys:String x:Key="HdEmail1">Email</sys:String>
    <sys:String x:Key="HdTel1">Tel</sys:String>
    <sys:String x:Key="MsgShowTime1">Now</sys:String>-->

</ResourceDictionary>